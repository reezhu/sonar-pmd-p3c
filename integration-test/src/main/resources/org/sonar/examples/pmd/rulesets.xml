<?xml version="1.0"?>
<ruleset name="PMD extensions"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

  <description></description>

  <rule name="MaximumMethodsCountCheck"
        message="Avoid too many methods"
        class="org.sonar.examples.pmd.MaximumMethodsCountCheck">
    <description>
      Avoid too many methods
    </description>
    <priority>3</priority>
    <properties>
      <property name="maxAuthorisedMethodsCount" description="Maximum number of methods authorised" value="3"/>
    </properties>
    <example>
      <![CDATA[
          // too many methods!
            public void doSomething() {}
            public void doSomething2() {}
            public void doSomething3() {}
            public void doSomething4() {}

        ]]>
    </example>
  </rule>

  <rule name="AvoidIfWithoutBrace"
        message="Avoid if without using brace"
        class="net.sourceforge.pmd.lang.rule.XPathRule"
        language="java">
    <description>
      Avoid if without using brace
    </description>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
            //IfStatement[not(Statement/Block)]
        ]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
       // don't do this!
       if (true)
        test = "test";
      ]]>
    </example>
  </rule>

  <rule name="DoNotExtendIOException"
        message="Extend Exception rather than IOException."
        class="net.sourceforge.pmd.lang.rule.XPathRule"
        language="java">
    <description>
      IOException should never be extended. Either use it, or extend Exception for your own business exceptions.
    </description>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
            //ClassOrInterfaceType[typeIs('java.io.IOException')]
        ]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
       // don't do this!
       class MyOwnIOException extends IOException {
       }
      ]]>
    </example>
  </rule>
  <rule name="CheckNullAfterMapGetRule"
        message="Always check for null after retrieving a value from a Map"
        class="net.sourceforge.pmd.lang.rule.XPathRule"
        language="java">
    <description>
      When retrieving values from a Map using methods like get(), getOrDefault(), or similar,
      you should always check if the returned value is null before using it to avoid NullPointerExceptions.
    </description>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
            //PrimaryExpression[
              PrimaryPrefix/Name[ends-with(@Image, '.get')] or
              PrimarySuffix[@Image='get']
            ]/following::PrimaryExpression[
              ./PrimaryPrefix/Name[
                substring-after(@Image, '.') != 'equals' and
                substring-after(@Image, '.') != 'isPresent' and
                not(contains(@Image, ' == null')) and
                not(contains(@Image, ' != null'))
              ]
            ]
          ]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
        // Non-compliant code
        Map<String, User> userMap = new HashMap<>();
        User user = userMap.get("userId");
        String userName = user.getName(); // Potential NullPointerException if user is null
        
        // Compliant code
        Map<String, User> userMap = new HashMap<>();
        User user = userMap.get("userId");
        if (user != null) {
            String userName = user.getName(); // Safe, we've checked for null
        }
      ]]>
    </example>
  </rule>
</ruleset>
